{
    "collab_server" : "",
    "contents" : "\ntextInputRow<-function (inputId, label, value = \"\")\n{\n  div(style=\"display:inline-block\",\n      tags$label(label, `for` = inputId),\n      tags$input(id = inputId, type = \"text\", value = value,class=\"input-small\"))\n}\n\nshinyUI(\n  fluidPage(\n    useShinyjs(),\n    theme = \"simple.css\",\n\n    headerPanel(                                  #d9230f\n      h1('Latent Class Clustering',\n         style = \"height: 200px; color: #A52A2A; background-color: \t#DCDCDC;\n                 font-size: 300%; font-weight: 600;\n                 line-height: 3cm; padding-left: 1cm;\")),\n\n    sidebarPanel(\n      h4(\"Dataset:\"),                            ## load data\n      selectInput(\"data\", \"Select Dataset\", c(\"Example\",\"Upload Dataset\",\"Simulate Dataset\")),\n\n      conditionalPanel(\n        condition = \"input.data == 'Example'\",    # Example dataset\n        selectInput(\"ExampleData\", \"Example Dataset\", ExampleDataset )),\n\n      conditionalPanel(                           # load dataset\n        condition = \"input.data == 'Upload Dataset'\",\n        fileInput('LoadData', 'Upload dataset',\n                  accept = c('text/csv',\n                             'text/comma-separated-values,text/plain',\n                             '.csv'))),\n      hr(),\n      uiOutput(\"variSelector\"),                   ## select variables\n      h4(\"Advance:\"),\n      checkboxInput(\"containFreq\",\"Contain Frequency\"),\n      uiOutput(\"freqSelector\"),                   ## select frequency\n      checkboxInput(\"containCov\",\"Contain Covariates\"),\n      uiOutput(\"covariate\"),\n\n      h4(\"Variable Type:\"),                       ## set variables' type\n      uiOutput(\"typeSelector\"),\n      uiOutput(\"orderSelector\"),\n      hr(),\n      sliderInput(\"nCluster\",h4(\"Number of Clusters:\"),   ## set number of clusters\n                  min = 1, max = 20, value = c(2,5), step =1),\n      uiOutput(\"pkgs\"),\n      actionButton(\"run\", \"Run Model\")            ## run the model\n\n\n    ),\n\n    mainPanel(\n      navbarPage( \"\", id =\"tabset\",\n\n        ### Data ###\n        tabPanel(\"Data\",\n          h3(\"Raw Data:\"),\n          DT::dataTableOutput('dataView'),\n\n          h3(\"Summary:\"),\n          tabsetPanel(\n            tabPanel('Plot',\n                     plotOutput('dataplot'),\n                     checkboxInput(\"ggpairs\", label = \"ggpairs\", value = FALSE)\n            ),\n            tabPanel('Table', align = 'center',\n                     style = \"margin-top:50px;\",\n                     tableOutput('dataSummary')\n            )\n          )\n\n\n\n        ),\n\n        ### Clustering  ###\n        tabPanel(\"Clustering\",\n\n           # flexmix\n           tabsetPanel(id = \"Clustering\",\n           tabPanel(\"flexmix\", id = \"flexmix\",\n                    h3(\"Summary\"),\n                    tabPanel('DataView', DT::dataTableOutput('summary')), # summary table\n                    uiOutput(\"indexSelector\"),                  # summary display\n                    plotOutput('plotSummary'),                  # summary plot\n\n                    hr(),\n                    selectInput(\"mChoose\", h4(\"Choose Model By:\"), c(Index,\"Number of cluster\")),\n                    conditionalPanel(\n                      condition= 'input.mChoose == \"Number of cluster\"',\n                      uiOutput(\"nclust\")\n                    ),\n\n                    tabsetPanel(\n                      tabPanel(\"Profile\",\n                               fluidRow(\n                                 align = 'center',\n                                 style = \"margin-top:50px;\",\n                                 tableOutput(\"profile\" )\n                               ),\n                               checkboxInput(\"detail\", label = \"Show details\", value = FALSE),\n                               hr(),\n                               plotlyOutput(outputId = \"plot1\")\n                      ),\n                      tabPanel(\"ProbMeans\",\n                               fluidRow(\n                                 align = 'center',\n                                 style = \"margin-top:50px;\",\n                                 tableOutput(\"probMeans\" )\n                               ),\n                               checkboxInput(\"detail1\", label = \"Show details\", value = FALSE)\n                      )\n                    )\n                ),\n\n\n           # poLCA\n           tabPanel(\"poLCA\",id = \"poLCA\",\n                    h3(\"Summary\"),\n                    tabPanel('DataView', DT::dataTableOutput('posummary')), # summary table\n                    uiOutput(\"poindexSelector\"), # summary display\n                    plotOutput('poplotSummary'),\n                    hr(),\n                    selectInput(\"pomChoose\", h4(\"Choose Model By:\"), c(Index,\"Number of cluster\")),\n                    conditionalPanel(\n                      condition= 'input.pomChoose == \"Number of cluster\"',\n                      uiOutput(\"ponclust\")\n                    ),\n                    tabsetPanel(\n                      tabPanel(\"Profile\",\n                               fluidRow(\n                                 align = 'center',\n                                 style = \"margin-top:50px;\",\n                                 tableOutput(\"poprofile\" )\n                               ),\n                              # checkboxInput(\"detail\", label = \"Show details\", value = FALSE),\n                               hr(),\n                               plotlyOutput(outputId = \"poplot\")\n                      ),\n                      tabPanel(\"ProbMeans\",\n                               fluidRow(\n                                 align = 'center',\n                                 style = \"margin-top:50px;\",\n                                 tableOutput(\"poprobMeans\" )\n                               )\n                               #checkboxInput(\"detail1\", label = \"Show details\", value = FALSE)\n                      )\n                    )\n\n           ),\n           # mclust\n           tabPanel(\"mclust\",\n                    h3(\"Summary\"),\n                    selectInput(\"mcifBIC\", \"\",\n                                choices = c(\"BIC\", \"ICL\")),\n                    DT::dataTableOutput(\"mcBICsum\"),\n                    plotOutput(\"mcplot\"),\n\n                    h4(\"Top Models:\"),\n                    tableOutput(\"mcSum\"),\n                    hr(),\n                    h3(\"Choose Models By\"),\n                    uiOutput(\"mcModel\"),\n\n                    tabsetPanel(\n                      tabPanel(\"profile\",\n                               fluidRow(\n                                 align = 'center',\n                                 style = \"margin-top:50px;\",\n                                 tableOutput(\"mcprofile\")\n                               ),\n                               hr(),\n                               plotlyOutput(outputId = \"mcProfilePlot\")\n\n                      ),\n                      tabPanel(\"plot\",\n                        plotOutput(\"mcplot1\")\n                      )\n\n\n                    )\n                    )\n           )\n\n        ),\n        # tabPanel('Test',\n        #          tableOutput(\"test\")\n        # ),\n        ### Output ###\n        tabPanel('Output', value = \"Output\",\n          selectInput('outputSet', h3('Choose a output dataset:'),\n                      choices = c(\"Dataset (with cluster)\", \"Profile\", \"ProbMeans\")),\n          downloadButton('downloadOutput','Download')),\n\n        ### Simulate ###\n          tabPanel(title = 'Simulate',\n                   value = \"Simulate\",\n                   style = \"margin-top:5px;\",\n\n                   numericInput('ngroup', h4('Number of groups'),value =3, min = 2, step =1),\n                   h4('Size of each group:'),\n                   fluidRow(\n                     uiOutput('sizeSelector')\n                   ),\n\n                   h4('Number of each kinds of variables:'),\n                   fluidRow(\n                     column(width = 2, numericInput('ncont', 'continuous',value = 3, min = 0, step = 1)),\n                     column(width = 2, numericInput('nord', 'ordinal',value = 2, min = 0, step = 1)),\n                     column(width = 2, numericInput('nnom', 'nominal',value = 2, min = 0, step = 1)),\n                     column(width = 2, numericInput('ncount', 'count',value = 2, min = 0, step = 1))\n                   ),\n\n                   checkboxInput('defineDT','Define Details', value = FALSE),\n\n                   fluidRow( uiOutput('cateOrd')),\n                   fluidRow( uiOutput('cateNom')),\n\n                   rHandsontableOutput(\"hot\", width = 350),\n\n                   hr(),\n                   h3(\"Simulated Data:\"),\n                   DT::dataTableOutput('simulatedData'),\n                   hr(),\n                   uiOutput(\"fmclustTable\"),\n                   hr(),\n                   uiOutput(\"poclustTable\"),\n                   hr(),\n                   uiOutput(\"mcclustTable\")\n          )\n      )\n    )\n  )\n)\n",
    "created" : 1470160586388.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3278329555",
    "id" : "1D337D52",
    "lastKnownWriteTime" : 1470250129,
    "last_content_update" : 1470250129964,
    "path" : "~/Desktop/customer segmentation/07.25 Shiny 0.1.0/ui.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
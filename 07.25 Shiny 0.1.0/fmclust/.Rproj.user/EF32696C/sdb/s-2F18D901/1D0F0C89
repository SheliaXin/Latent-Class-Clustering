{
    "collab_server" : "",
    "contents" : "#' fmclust\n#'\n#' \\code{fmclust} fits a finite mixture clustering model where some variables are continuous and\n#' modelled within the mixture components by Gaussian distributions, some variables are nominal\n#' and modelled by independent multinomial distributions, and some variables are count and\n#' modelled by independent poisson distributions. The fit is by maximum likelihood estimation\n#' computed with the EM algorithm, based on function \\code{initFlexmix} from package \\code{flexmix}\n#'\n#' @param x input dataframe\n#' @param continuous  a vecter indicates the columns of continuous variables.\n#' @param ordinal  a vecter indicates the columns of ordinal variables.\n#' @param nominal  a vecter indicates the columns of nominal variables.\n#' @param count  a vecter indicates the columns of count variables.\n#' @param order  a list indicates the order of each ordinal variable.\n#' @param nClust a vecter of number of clusters\n#' @param diagonal if assume local independence between continuous variable. default TRUE\n#' @return an object of class \\code{stepFlexmix} containing the best models with respect to the\n#' log likelihood for the different number of components in a slot if \\code{length(k)>1},\n#' else directly an object of class \\code{flexmix}.\n#'\n#' @examples\n#' # simulate data\n#' gg <- simuData(3, size = c(100,100,100), cont = 3, ord = 2,  nom =3, count=3,\n#'      center = center, var = var, centerOrd = centerOrd, varOrd = varOrd, podim = podim,\n#'      paraNom = paraNom, ppdim = ppdim, lambda = lambda)\n#'\n#' # run models\n#' mds <- fmclust(gg$data[,-1], continuous = 1:3, ordinal = 4:5, nominal = 6:8, count = 9:11)\n#'\n#' # get the best model by BIC\n#' m <- getModel(mds, which=\"BIC\")\n#' m\n#'\n#' # compare with the real cluster\n#' t <- table(gg$data[,1],m@cluster)\n#' t\n#'\n#' @export\n\nfmclust <- function(x, continuous = NULL, ordinal = NULL, nominal = NULL,\n                    count = NULL, order = NULL, nClust = 2:5,\n                    concomitant = NULL,\n                    diagonal = TRUE){\n\n  cc <- data.recode(x, continuous = continuous, ordinal = ordinal, nominal = nominal,\n                    count = count, order = order, concomitant = concomitant)\n\n\n  if(!is.null(concomitant)){\n    fc <- as.formula(paste(\"~\", paste(names(x)[concomitant], collapse = \"+\")))\n    concom <- FLXPmultinom(fc)\n    data <- data.frame(cc$data, cc$covariates)\n  }else{\n    concom = NULL\n    data <- as.data.frame(cc$data)\n  }\n\n  f <- as.formula(paste( \"cbind(\", paste(colnames(cc$data) ,collapse = \",\"), \")~1\"))\n\n  mdls <- initFlexmix(f, k = nClust,\n                      concomitant = concom,\n                      data = data,\n                      model = mcmixed(continuous = cc$con.len,\n                                      ordinal = cc$ord.len,\n                                      nominal = cc$nom.len,\n                                      count.poi = cc$count.len,\n                                      ppdim = cc$ppdim[1:cc$nom.len],\n                                      diagonal = diagonal))\n  res <- list()\n  res$mdls <- mdls\n  res$cc <- cc\n  res$nClust <- nClust\n  res$summary <- fmSummary(mdls)\n  return(res)\n}\n\n\nfmSummary <- function(object){\n  d <- data.frame(iter = sapply(object@models, function(x) x@iter),\n                  converged = sapply(object@models, function(x) x@converged),\n                  Npar = sapply(object@models, function(x) x@df),\n                  k = sapply(object@models, function(x) x@k),\n                  k0 = sapply(object@models, function(x) x@k0),\n                  logLik = sapply(object@models, function(x) logLik(x)),\n                  AIC = AIC(object),\n                  BIC = BIC(object),\n                  ICL = ICL(object))\n  return(d)\n}\n\n",
    "created" : 1470150641495.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4121722106",
    "id" : "1D0F0C89",
    "lastKnownWriteTime" : 1470246152,
    "last_content_update" : 1470246152288,
    "path" : "~/Desktop/customer segmentation/07.25 Shiny 0.1.0/fmclust/R/fmclust.R",
    "project_path" : "R/fmclust.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
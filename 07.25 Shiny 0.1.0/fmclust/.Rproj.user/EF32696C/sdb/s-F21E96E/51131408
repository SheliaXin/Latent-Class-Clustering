{
    "collab_server" : "",
    "contents" : "#' profile\n#'\n#' @param mod object of class \\code{flexmix}\n#' @param data data obeject of \\code{data.recode}\n#' @return a list with component\n#'    \\item{dfPlt}{data frame used in profile plot (without split of continuous&ordinal)}\n#'    \\item{dfPro}{data frame of profile}\n#'    \\item{dfPrM}{data frame of probMean}\n#' @export\n\nprofile <- function(mod, data){\n\n  para <- parameters(mod)\n  newdf <- cbind(data$ordata, cIdx =  mod@cluster)    # data with cluster index\n  namep <- c(\"Cluster Size\")               # track names used in profile table\n  namel <- c(\"\")\n  nameplot <- c()\n  dfPro <- data.frame()                    # dfPro used in profile table\n  dfPlt <- data.frame()                    # dfPlt used in profile plot\n  dfPrM <- data.frame()                    # dfPrM used in probMean\n  srow <- 0                                # track the start row in para\n  scol <- 0                                # track the start column\n  cSize <-  table(mod@cluster)/length(mod@cluster)\n  dfPro <- rbind( dfPro, cSize )           # add cluster size\n  colnames( dfPro) <- colnames(para)\n  dfPrM <- dfPro\n\n  # continuous\n  if(data$con.len >0){\n\n    for(i in 1:data$con.len){\n      # scaled mean\n      minV <- min(data$data[,i])\n      maxV <- max(data$data[,i])\n      toAdd <- (para[i,] - minV) / (maxV - minV)\n      dfPlt <- dfPlt %>% rbind(toAdd)\n      dfPro <- dfPro %>% rbind(para[i,])\n      dfPrM <- dfPrM %>% rbind(para[i,])\n      colnames(dfPlt) <- colnames(para)\n\n      # table\n      newdf[,i] <- cut(newdf[,i],5)\n      t <- table(newdf[,c(i,ncol(newdf))])\n      colnames(t) <- colnames(para)\n      # t1 <- as.data.frame.matrix(t/colSums(t))\n      t1 <-  as.data.frame.matrix(sweep(t,2,colSums(t),`/`))\n      dfPro <- rbind(dfPro, t1)\n      t2 <- as.data.frame.matrix(t/rowSums(t))\n      dfPrM <- rbind(dfPrM, t2)\n      namep <- namep %>% append(c(data$con.name[i], rep(\"\",5)))\n      namel <- namel %>% append(c(\"mean\",rownames(t)))\n    }\n    nameplot <- append(nameplot,data$con.name)\n    srow <- srow + data$con.len * (data$con.len + 1)\n    scol <- scol + data$con.len\n\n  }\n\n\n  ####################\n  ## ordinal data\n  ## a little bit confused here. Use mean to plot, but show the probability of each category in the profile\n  if( data$ord.len >0){\n\n    for(i in 1:data$ord.len){\n      # mean\n      minV <- min(data$data[,scol+i])\n      maxV <- max(data$data[,scol+i])\n      toAdd <- (para[srow+i,] - minV) / (maxV - minV)\n      dfPlt <- dfPlt %>% rbind(toAdd)\n      nameplot <- nameplot %>% append(c(names(data$ord.levels[i])))\n\n      #table\n      t <- table(newdf[,c(scol+i,ncol(newdf))])\n      colnames(t) <- colnames(para)\n      #t1 <- as.data.frame.matrix(t/colSums(t))\n      t1 <-  as.data.frame.matrix(sweep(t,2,colSums(t),`/`))\n      t2 <- as.data.frame.matrix(t/rowSums(t))\n      dfPro <- dfPro %>% rbind(t1)\n      dfPrM <- dfPrM %>% rbind(t2)\n      namel <- namel %>% append(rownames(t))\n      namep <- namep %>% append(c(names(data$ord.levels[i]),\n                                  rep(\"\", length(data$ord.levels[[i]])-1)))\n    }\n\n    srow <- srow + data$ord.len * (data$ord.len +1)\n    scol <- scol + data$ord.len\n    colnames(dfPlt) <- colnames(para)\n  }\n\n  # nominal\n  if(data$nom.len >0 ){\n    toAdd <- as.data.frame( para[(srow+1):(srow + sum(data$ppdim)), ])\n    colnames(toAdd) <- colnames(para)\n    dfPlt <- rbind(dfPlt, toAdd)\n    dfPro <- rbind(dfPro, toAdd)\n    dfPrM <- dfPrM %>% rbind(toAdd * cSize/ rowSums(toAdd * cSize) )\n\n    for(i in 1:data$nom.len){\n      namel <- namel %>% append(data$nom.levels[[i]])\n      namep <- namep %>% append(c(names(data$nom.levels[i]),\n                                  rep(\"\", length(data$nom.levels[[i]])-1)))\n    }\n    nameplot <- nameplot %>% append(apply(melt(data$nom.levels)[,c(2,1)],1,paste,collapse = \"-\"))\n    srow <- srow + sum(data$ppdim)\n    scol <- scol + data$nom.len\n  }\n\n\n  if(data$count.len>0){\n    toAdd <- as.data.frame( para[(srow+1):nrow(para), ])\n    colnames(toAdd) <- colnames(para)\n\n\n    minV <- apply(data$data[ , (scol+1):(scol+data$count.len)],2,min)\n    maxV <- apply(data$data[ , (scol+1):(scol+data$count.len)],2,max)\n    dfPlt <- rbind(dfPlt, t((t(para[(srow+1):nrow(para),]) - minV) / (maxV - minV)))\n    dfPro <- rbind(dfPro, toAdd)\n    dfPrM <- dfPrM %>% rbind(toAdd * cSize/ rowSums(toAdd * cSize) )\n\n\n    namep <- namep %>% append(data$count.name)\n    namel <- namel %>% append(rep(\"mean\", data$count.len))\n    nameplot <- nameplot %>% append(data$count.name)\n  }\n\n\n\n  rownames(dfPlt) <- nameplot\n  dfPro <- cbind(\" \" = namep,  \"  \" = namel, dfPro)\n  rownames(dfPro) <-NULL\n  dfPrM <- cbind(\" \" = namep,  \"  \" = namel, dfPrM)\n  rownames(dfPrM) <-NULL\n  return(list(dfPlt = dfPlt, dfPro = dfPro,dfPrM = dfPrM ))\n}\n\n",
    "created" : 1469546707082.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1833123959",
    "id" : "51131408",
    "lastKnownWriteTime" : 1469554047,
    "last_content_update" : 1469554047406,
    "path" : "~/Desktop/customer segmentation/07.25 Shiny 1.0/fmclust/R/profile.R",
    "project_path" : "R/profile.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}